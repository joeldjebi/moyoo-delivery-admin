name: 🚀 Deploy MOYOO Delivery

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: moyoo_delivery
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, pdo_mysql, phar, posix, readline, session, simplexml, soap, sockets, sqlite3, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib
        coverage: none

    - name: 📦 Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: 📦 Install NPM dependencies
      run: npm ci

    - name: 🔧 Copy environment file
      run: cp .env.example .env

    - name: 🔑 Generate application key
      run: php artisan key:generate

    - name: 🗄️ Run database migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: moyoo_delivery
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: 🧪 Run tests
      run: php artisan test
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: moyoo_delivery
        DB_USERNAME: root
        DB_PASSWORD: password

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, pdo_mysql, phar, posix, readline, session, simplexml, soap, sockets, sqlite3, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib

    - name: 📦 Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader --no-dev

    - name: 📦 Install NPM dependencies
      run: npm ci

    - name: 🏗️ Build assets
      run: npm run build

    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          vendor/
          node_modules/
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}-${{ hashFiles('**/package-lock.json') }}

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to production
      run: |
        echo "🚀 Déploiement en production..."
        echo "✅ Tests passés avec succès"
        echo "✅ Build terminé avec succès"
        echo "🎉 Prêt pour le déploiement !"
